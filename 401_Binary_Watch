class Solution {
//1. use bitcountToNumbers to store all the satisfied numbers
//2. iterate through these numbers to print it int a ostringstream
//3. the use of bitset to count the bits
//4. >> operation privilege > &
public:
    vector<string> readBinaryWatch(int num) {
        vector<int> bitcountToNumbers;
        vector<string> ans;
        for(int i=0;i<1024;i++){
            bitset<10> bs(i);
            if(bs.count()==num) bitcountToNumbers.push_back(i);
        }
        for(int t: bitcountToNumbers){
            int hour=(t& 0b1111000000) >>6;
            int minute=t& 0b0000111111;
            if(hour>=12 || minute>=60) continue;
            ostringstream ostring;
            ostring<< hour<<":";
            ostring << setfill('0') << setw(2) << minute;
            ans.push_back(ostring.str());
        }
        return ans;
    }
};
