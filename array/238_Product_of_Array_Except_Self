class Solution {
//1.for each pos, the final result = left product * right product
//2.two passes for each side
//3.resembles 42's two pass dp solution
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans(n, 1);
        for (int i = 0, prod = 1; i < n; prod *= nums[i++]) {
            ans[i] = prod;
        }
        for (int i = n - 1, prod = 1; i >= 0; prod *= nums[i--]) {
            ans[i] *= prod;
        }
        return ans;
    }
};
