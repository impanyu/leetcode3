class Solution {
//1.make the condition in the loop as simple as possible, normally only allow one pointer to move
//2.try to naturally cover all corner case
public:
    int removeElement(vector<int>& nums, int val) {
        int i=0,j=nums.size()-1;  
        while(i<=j){
            if(nums[i]==val) {
                nums[i]=nums[j];
                j--;    
            }
            else{
                i++;
            }
        }
       return i;
    }
};


class Solution{
//method 2: moving non val elements forward
//this method checks the one substituting rather than the one substituted as method 1
public:
      int removeElement(vector<int>& nums, int val){
            int i=0;
            for(int j=0;j<nums.size();j++){
                if(nums[j]!=val){
                    nums[i]=nums[j];
                    i++;
                }
           }
           return i;
    }

};
