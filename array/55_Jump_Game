class Solution {
//1.no need to use dp. use greedy only.
//2.lastPos to keep track of the current smallest good position possible.
public:
    bool canJump(vector<int>& nums) {
        int lastPos=nums.size()-1;
        for(int i=nums.size()-1;i>=0;i--)
            if(nums[i]+i>=lastPos)
                lastPos=i;
        return lastPos==0;
        
    }
};
