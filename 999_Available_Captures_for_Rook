const vector<pair<int,int>> dir={{0,-1},{0,1},{1,0},{-1,0}};
const int N=8;
class Solution {
//use a vector of pairs to fold the logic of search in 4 directions
public:
    int numRookCaptures(vector<vector<char>>& board) {
       int m,n;
       int count=0;
       for(int i=0;i<N;i++){
           for(int j=0;j<N;j++){
               if(board[i][j]=='R'){
                   m=i;
                   n=j;
               }
           }
       }
        for(int i=0;i<4;i++){
            int x0=m;
            int y0=n;
            int dx=dir[i].first;
            int dy=dir[i].second;
            while(true){
                x0+=dx;
                y0+=dy;
                if(x0<0 || x0>=N || y0<0 || y0>=N) break;
                else if(board[x0][y0]=='B') break;
                else if(board[x0][y0]=='p') {
                    count++;
                    break;
                }
                
                
            }
        }
           
       return count;
    }
};
